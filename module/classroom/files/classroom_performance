#! /usr/bin/env ruby
require 'json'
require 'logger'
require 'fileutils'
require 'aws-sdk'

LOGGER       = Logger.new('/var/log/puppetlabs/classroom')
LOGGER.level = Logger::DEBUG

## AWS configuration
STATS_BUCKET = 'classroom-statistics'
PERF_BUCKET  = 'classroom-performance'

def display_help
  puts "This will take regular performance related snapshots and then upload"
  puts "to our S3 bucket for engineering analysis near the end of your delivery."
  puts
  puts "You may also use it to record performance notes into the classroom log."
  puts
  puts "Usage: classroom_performance [ log <message> | report | snapshot ]"
  puts
  puts "Interactive commands:"
  puts "  * log: Record a message into classroom log. This should be the only command you use."
  puts
  puts "System commands:"
  puts "  * report: Upload classroom log for analysis."
  puts "  * snapshot: Take a periodic snapshot of classroom statistics."
  puts
end


def submit_logs
  data = JSON.parse(File.read('/var/cache/showoff/courseware/stats/metadata.json')) rescue {}
  event_id = data['event_id'] || Time.now.to_i
  course   = data['course']   || 'none'
  email    = data['email']    || 'none'

  begin
    # depends on root's credentials
    s3 = Aws::S3::Resource.new(region:'us-west-2')
    
    # record the module versions in use
    system("puppet module list > /var/log/puppetlabs/classroom-modules")

    filename = "classroom-perflogs-#{course}-#{email}-#{event_id}.tar.gz"
    system("tar -cf /var/cache/#{filename} /var/log/puppetlabs/")
    obj = s3.bucket(PERF_BUCKET).object(filename)
    obj.upload_file("/var/cache/#{filename}")

    filename = "classroom-stats-#{course}-#{email}-#{event_id}.tar.gz"
    system("tar -cf /var/cache/#{filename} /var/cache/showoff/courseware/stats/")
    obj = s3.bucket(STATS_BUCKET).object(filename)
    obj.upload_file("/var/cache/#{filename}")

  rescue => e
    LOGGER.warn "S3 upload failed. No network?"
    LOGGER.warn e.message
    LOGGER.debug e.backtrace
  end

end

def record_snapshot
  LOGGER.debug "-------------------------------- top -bn1 ----------------------------------\n#{`top -bn1`}"
  LOGGER.debug "-------------------------------- vmstat ------------------------------------\n#{`vmstat`}"
  LOGGER.debug "-------------------------------- netstat -a --------------------------------\n#{`netstat -a`}"
  LOGGER.debug "-------------------------------- iostat ------------------------------------\n#{`iostat`}"
  LOGGER.debug "-------------------------------- mpstat -P ALL -----------------------------\n#{`mpstat -P ALL`}"

  FileUtils.mkdir_p '/var/log/puppetlabs/classroom-traffic'
  `tcpdump -G 15 -W 1 -w /var/log/puppetlabs/classroom-traffic/#{Time.now.to_i}.pcap -i any > /dev/null 2>&1 &`
end


#### program starts ####
case ARGV.shift
when 'report'
  submit_logs

when 'log'
  message = ARGV.empty? ? "Misc performance issue noted." : ARGV.join(' ')
  LOGGER.warn message
  record_snapshot

when 'snapshot'
  LOGGER.debug "Scheduled performance snapshot"
  record_snapshot

else
  display_help
end
