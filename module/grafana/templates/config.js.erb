// !!! generated by puppet !!!
//
///// @scratch /configuration/config.js/1
// == Configuration
// config.js is where you will find the core Grafana configuration. This file contains parameter that
// must be set before Grafana is run for the first time.
///
define(['settings'],
function (Settings) {

  return new Settings({

    // datasources, you can add multiple
    datasources: {
    <% if scope.lookupvar('grafana::graphite_host') != '' -%>
      graphite: {
        type: 'graphite',
        url: "<%= scope.lookupvar('grafana::graphite_scheme') %>://<%= scope.lookupvar('grafana::graphite_host') %>:<%= scope.lookupvar('grafana::graphite_port') %>",
        default: true
      },
    <% end %>
    <% if scope.lookupvar('grafana::elasticsearch_host') != '' -%>
      elasticsearch: {
        type: 'elasticsearch',
        url: "<%= scope.lookupvar('grafana::elasticsearch_scheme') %>://<%= scope.lookupvar('grafana::elasticsearch_host') %>:<%= scope.lookupvar('grafana::elasticsearch_port') %>",
        index: '<%= scope.lookupvar('grafana::elasticsearch_index') %>',
        grafanaDB: true,
      },
    <% end -%>

    <% if scope.lookupvar('grafana::opentsdb_host') != '' -%>
      opentsdb: {
        type: 'opentsdb',
        default: true,
        url: "<%= scope.lookupvar('grafana::opentsdb_scheme') %>://<%= scope.lookupvar('grafana::opentsdb_host') %>:<%= scope.lookupvar('grafana::opentsdb_port') %>",
      },
    <% end %>

    <% if scope.lookupvar('grafana::influxdb_host') != '' -%>
      influxdb: {
        type: 'influxdb',
        url: "<%= scope.lookupvar('grafana::influxdb_scheme') %>://<%= scope.lookupvar('grafana::influxdb_host') %>:<%= scope.lookupvar('grafana::influxdb_port') %><%= scope.lookupvar('grafana::influxdb_dbpath') %>",
        username: '<%= scope.lookupvar('grafana::influxdb_user') %>',
        password: '<%= scope.lookupvar('grafana::influxdb_pass') %>'
      },
      grafana: {
          type: 'influxdb',
          url: "<%= scope.lookupvar('grafana::influxdb_scheme') %>://<%= scope.lookupvar('grafana::influxdb_host') %>:<%= scope.lookupvar('grafana::influxdb_port') %>/db/grafana",
          username: '<%= scope.lookupvar('grafana::influxdb_grafana_user') %>',
          password: '<%= scope.lookupvar('grafana::influxdb_grafana_pass') %>',
          grafanaDB: true
      },
    <% end %>
    },

    /* Global configuration options
    * ========================================================
    */

    // specify the limit for dashboard search results
    search: {
      max_results: <%= scope.lookupvar('grafana::max_results') %>
    },

    // default start dashboard
    default_route: '<%= scope.lookupvar('grafana::default_route') %>',

    // timezoneOFfset:
    // If you experiance problems with zoom, it is probably caused by timezone diff between
    // your browser and the graphite-web application. timezoneOffset setting can be used to have Grafana
    // translate absolute time ranges to the graphite-web timezone.
    // Example:
    //   If TIME_ZONE in graphite-web config file local_settings.py is set to America/New_York, then set
    //   timezoneOffset to "-0500" (for UTC - 5 hours)
    // Example:
    //   If TIME_ZONE is set to UTC, set this to "0000"
    //
    timezoneOffset: "<%= scope.lookupvar('grafana::timezone_offset') %>",

    // set to false to disable unsaved changes warning
    unsaved_changes_warning: true,

    // set the default timespan for the playlist feature
    // Example: "1m", "1h"
    playlist_timespan: "<%= scope.lookupvar('grafana::playlist_timespan') %>",

    // If you want to specify password before saving, please specify it bellow
    // The purpose of this password is not security, but to stop some users from accidentally changing dashboards
    admin: {
      password: ''
    },

    // If you want to specify password before saving, please specify it bellow
    // The purpose of this password is not security, but to stop some users from accidentally changing dashboards
    admin: {
      password: ''
    },

    // Change window title prefix from 'Grafana - <dashboard title>'
    window_title_prefix: 'Grafana - ',

    // Add your own custom panels
    plugins: {
      // list of plugin panels
      panels: [],
      // requirejs modules in plugins folder that should be loaded
      // for example custom datasources
      dependencies: [],
    }

  });
});
